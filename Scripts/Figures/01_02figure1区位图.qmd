---
title: "Figure1北京区位图"
author: "Yu Chen"
date: 2023-09-24
updata：2025-3-12
format: 
  html:
    code-fold: false
    embed-resources: true
    toc: true
    toc-location: right
##本代码设计文中第一章区位图，主要包含：北京在中国的位置，手机位置请求密度图
---

```{r}
library(ggplot2)
library(data.table)
library(tidyverse) #提供管道操作
library(sf)
library(raster)
library(terra)
library(spData)
library(ggspatial)
library(mapchina)
library(gridExtra) # for multiplots 
library(ggpubr) # for multiplots and labels
library(plyr) #for revalue function
# library(RColorBrewer) #for multi colour
library(cowplot) #for ggdraw function
library(ggforce) #for zoom in
# library(ggimage) #for geom_image function
# library(showtext) #plot icons in ggplot2
library(ggrepel) # for correct position label
library(grid)# for viewport

load("~/ClimBehav_bj/results/data/raw/01_AOI/11-北京市-aoi.Rdata")
load("~/ClimBehav_bj/results/data/processed/checkins_raster.Rdata")
beijing_aoi<- read_sf("~/ClimBehav_bj/results/data/raw/01_AOI/11-北京市.shp")
ring6 <- read_sf("~/ClimBehav_bj/results/data/raw/01_AOI/beijing_ring6.shp")
spPOI <- read.csv("~/ClimBehav_bj/results/data/raw/05_Other/SpecialPOI.CSV")
crs_84 <- st_crs("EPSG:4326")  ## WGS 84 大地坐标
crs_al <- st_crs("+proj=aea +lat_1=25 +lat_2=47 +lon_0=105") ## Albers Equal Area Conic投影

```

```{r}
###### Beijing shp ######
beijing <-
  sf::st_read("https://geo.datav.aliyun.com/areas_v3/bound/110000_full.json")
  # st_transform(crs_al) %>%
  # sf::st_make_valid()
# # beijing <- china_all %>% dplyr::filter(adcode == "110000") #从世界地图中提取北京,使无效几何体有效
# china_beijing <- ggplot(china_all) + 
#   geom_sf(fill = "white") +
#   geom_sf(data = china_all[1, ],fill = "white", color = "red", linewidth = 1) +
#   # annotate("text", label="a", x = panel.x, y = panel.y, ) +
#   theme_bw() + 
#   annotation_scale(location = "bl",style = "ticks")
# china_beijing
```

## Density of visits in Beijing

```{r}
# beijing <- china %>% filter(Code_Province == 11)

#导入位置请求数据
mp <- fread(file = "~/ClimBehav_bj/results/data/raw/02_MP/MP-beijing-2017.csv.gz", nThread = 14)

timeline <- seq(from = ymd_h(2017010100), to = ymd_h(2017123123), by = "1 hour") %>% 
  as.data.table() %>% 
  transmute(
    time =as.character(year(x) * 1e6 + month(x) * 1e4 + day(x) * 1e2 + hour(x)) 
  )
timeline <- timeline$time

#为区级行政区划加上标签
# beijing_label <- data.frame(
#   Code_County = c("110101", "110102", "110114", "110115", "110111", "110116", "110109", "110118", "110117", "110113", "110112", "110119", "110105", "110106", "110108", "110107"),
#   label = c("DC", "XC", "CP", "DX", "FS", "HR", "MTG", "MY", "PG", "SY", "TZ", "YQ", "CY", "FT", "HD", "SJS")
# )
# beijing <- left_join(beijing, beijing_label, by = "Code_County")

#create special POIs
# spPOI <- as.data.table(spPOI)
# spPOI[str_detect(name, "站") == 1, class := "Transport"]
# spPOI[str_detect(name, "政府") == 1, class := ""]
# spPOI %>% 
#   filter(name == )
# mutate(spPOI,class = c(""))
spPOI_point <- st_as_sf(spPOI,
                        coords = c("lon","lat"),
                        crs = 4326)

beijing_mp <- ggplot(beijing) + 
  geom_sf(fill = "white") +
  #需要先获取各区的质心，然后才能在这个坐标的基础上添加标签，有时间再弄
  # geom_sf_label(data = label) +
  geom_sf(data = checkins_raster, 
          mapping = aes(fill = checkins_num_log), color = NA) +
  geom_sf(data = spPOI_point[c(8),],color = "black")+
  geom_text_repel(data = spPOI[c(8),],aes(x=lon,y=lat,label = name),)+
  scale_fill_gradientn(name = "Numbers\nof visits\nin 2017",
                        # limits = c(0, 9),
                        breaks = seq(0, 9, 1),
                        label= expression(10^0,10^1,10^2,10^3,10^4,10^5,10^6,10^7,10^8,10^9),
                        na.value = NA,
                        colors= hcl.colors(10,"RdYlBu", rev = TRUE),
                       guide = guide_colorbar(position = "right",theme = theme(
                         legend.key.height = unit(15,"lines"),
                         legend.title = element_text(size = 10)
                       ))
                        ) + 
  labs(
    x = NULL,
    y = NULL
  )+
  annotation_scale(location = "br",style = "ticks") +
  theme_bw()+
  theme(
    legend.position = "none")
#会有一个报错，是提醒你因为全图范围太大，导致比例尺不适用于全图，并不是比例尺生成有误
# grid.arrange(china_beijing, beijing_mp, ncol = 2)

#beijing_mp + geom_sf(data = filter(beijing, Name_County %in% c("东城区", "西城区", "石景山区")), colour = "purple", alpha = 0, linewidth = 1)   =100%
#beijing_mp + geom_sf(data = filter(beijing, Name_County %in% c("东城区", "西城区", "石景山区", "朝阳区", "丰台区")), colour = "purple", alpha = 0, linewidth = 1) >=99%
#beijing_mp + geom_sf(data = filter(beijing, Name_County %in% c("东城区", "西城区", "石景山区", "朝阳区", "丰台区", "海淀区")), colour = "purple", alpha = 0, linewidth = 1)   >=95%

#beijing_mp + geom_sf(data = filter(beijing, Name_County %in% c("东城区", "西城区", "朝阳区", "丰台区", "石景山区", "海淀区", "顺义区", "怀柔区")), colour = "purple", alpha = 0, linewidth = 1)

```
## Distribution of the 4 classes of POIs
```{r}

###### 1.classification ######
##############################

df_classify<- aoi %>% as.data.table()
#######1.居家行为#########
df_classify[str_detect(type, "^120302") & str_detect(name, "(建设中)|(装修中)") == 0, ':='(class = 1, subclass = 1)] #住宅小区

#######2.公园访问#########
df_classify[str_detect(type, "^1101(00|01|05|06)") & str_detect(name, "(建设中)|(装修中)") == 0, ':='(class = 2, subclass = 2)] #公园广场和内部设施
df_classify[str_detect(type, "^1101(02|03|04)") & str_detect(name, "(建设中)|(装修中)") == 0, ':='(class = 2, subclass = 3)] #主题公园
df_classify[str_detect(type, "^1102(00|01|02|03|04|05|06|07|09)") & str_detect(name, "(建设中)|(装修中)") == 0, ':='(class = 2, subclass = 4)] #风景名胜

####### 3.Transport #########
df_classify[str_detect(type, "^(150104|150200|1504)") & str_detect(name, "(建设中)|(装修中)") == 0, ':='(class = 3, subclass = 5)] #机场、火车站、长途车站
df_classify[str_detect(type, "^1503(01|02|03)|151200") & str_detect(name, "(建设中)|(装修中)") == 0, ':='(class = 3, subclass = 6)] #渡口、港口

#######4.Work#########
df_classify[str_detect(type, "^1704") & str_detect(name, "(建设中)|(装修中)") == 0, ':='(class = 4, subclass = 7)] #农林牧渔基地
df_classify[str_detect(type, "^1202|^17(01|02)") & str_detect(name, "(建设中)|(装修中)") == 0, ':='(class = 4, subclass = 8)] #公司企业、写字楼
df_classify[str_detect(type, "^1703|^1201") & str_detect(name, "(建设中)|(装修中)") == 0, ':='(class = 4, subclass = 9)] #工厂，产业园
df_classify[str_detect(name, "(建设中)|(装修中)"), ':='(class = 4, subclass = 10)] #建筑工地,需要放在所有分类的最后
df_classify <- df_classify[is.na(class) == 0, .(id, class, subclass)]
aoiDist <- inner_join(df_classify, beijing_aoi, by = join_by(id == ID), relationship = "many-to-many")
rm(df_classify)
gc()

### 2.visitation aggregate ###
##############################

mp <- mp %>% 
  pivot_longer(timeline, names_to = "time", values_to = "visits") %>% 
  transmute(
    id,
    visits = as.double(visits)
  ) %>% 
  as.data.table()
mp <- mp[,visits := sum(visits, na.rm = T)/365, by = "id"] %>% 
  distinct(.keep_all = T)
  
aoiDist <- left_join(aoiDist,mp,by = "id")

###### 3.plot by class  ######
##############################

#create beijing pois sf
workLifeLabels <- c("Residential", "Park", "Transport", "Work")
# aoiDist$class <- aoiDist$class %>% 
#   factor() %>% 
#   revalue(c("1" = "Residential", "2" = "Park", "3" = "Transport", "4" = "Work")) %>% 
#   factor(labels = c("Residential", "Park", "Transport", "Work"))

# poi_point <-
#   st_as_sf(aoiDist,
#            coords = c("lon", "lat"),
#            crs = 4326,  # WGS 1984
#            agr = "constant"
#   )
aoiDist <- st_intersection(aoiDist, sf::st_make_valid(beijing))
quantiles <- NULL
for (i in 1:4) {
  quantiles[[i]] <-  aoiDist %>% 
    filter(class == i) %>%
    as.data.frame() %>% 
    dplyr::select(visits) %>% 
    quantile(seq(0,1,length.out = 4),na.rm = T)
}
quantiles_residential <- aoiDist %>% 
  filter(class == 1) %>%
  as.data.frame() %>% 
  dplyr::select(visits) %>% 
  quantile(seq(0,1,length.out = 4),na.rm = T)
quantiles_park <- aoiDist %>% 
  filter(class == 2) %>%
  as.data.frame() %>% 
  dplyr::select(visits) %>% 
  quantile(seq(0,1,length.out = 4),na.rm = T)
quantiles_transport <- aoiDist %>% 
  filter(class == 3) %>%
  as.data.frame() %>% 
  dplyr::select(visits) %>% 
  quantile(seq(0,1,length.out = 4),na.rm = T)
quantiles_work <- aoiDist %>% 
  filter(class == 4) %>%
  as.data.frame() %>% 
  dplyr::select(visits) %>% 
  quantile(seq(0,1,length.out = 4),na.rm = T)

# create color scale that encodes two variables
# red for gini and blue for mean income
# the special notation with gather is due to readibility reasons
bivariate_color_scale <- tibble(
  "3 - 1" = "#457b9d", # high visits, residential
  "2 - 1" = "#95B6C8",
  "1 - 1" = "#e6f1f3", # low visits, residential
  "3 - 2" = "#84a729", # high visits, park
  "2 - 2" = "#ABC36B",
  "1 - 2" = "#D3e1ae", # low visits, park
  "3 - 3" = "#C75c64", # high visits, transport
  "2 - 3" = "#DA7F84",
  "1 - 3" = "#eea2a4", # low visits, transport
  "3 - 4" = "#f0b57d", # high visits, work
  "2 - 4" = "#F3CE9F",
  "1 - 4" = "#f8e8c1", # low visits, work
) %>%
  gather("group", "fill")
# test <- aoiDist %>% 
#   group_by(class) %>% 
#   summarise(stQu = quantile(visits,na.rm = T)[[2]],
#             median = median(visits,na.rm = T),
#             rdQu = quantile(visits,na.rm = T)[[4]])
# summarise(aoiDist)
# aoiDist %>% 
#   filter(class == workLifeLabels[[i]]) %>% 
#   mutate()

aoiDistPlot <- NULL
# 分割成上面定义的组并加入填充
for (i in 1:4) {
  aoiDistPlot[[i]] <- aoiDist %>%
    filter(class == i) %>% 
    mutate(
      quantiles = cut(
        visits,
        breaks = quantiles[[i]],
        include.lowest = TRUE
      ),
      # 通过将因素作为数字粘贴在一起，我们匹配定义的组
      # 在 tibble bivariate_color_scale 中
      group = paste(
        as.numeric(quantiles), "-",
        i
      )
    ) %>%
    # 我们现在加入每个“组”的实际十六进制值
    left_join(bivariate_color_scale, by = "group")
}
label_zoom <- data.frame(
  label = c("a","b","c"),
  x = c(116.55,116.27,116.29),
  y = c(39.96,40.02,39.92)
)

#A warning :remove 370 NA visits
beijing_aoi <- ggplot()+
  geom_sf(data = beijing, fill = "white") +
  geom_sf(data = aoiDistPlot[[1]], aes(fill = fill, geometry = geometry), linetype = "blank") +
  geom_sf(data = aoiDistPlot[[2]], aes(fill = fill, geometry = geometry), linetype = "blank") +
  geom_sf(data = aoiDistPlot[[3]], aes(fill = fill, geometry = geometry), linetype = "blank") +
  geom_sf(data = aoiDistPlot[[4]], aes(fill = fill, geometry = geometry), linetype = "blank") +
  geom_rect(aes(xmin = 116.40, xmax = 116.55, ymin = 39.88,ymax = 39.96),colour = "red",alpha = 0) +
  geom_rect(aes(xmin = 116.27, xmax = 116.42, ymin = 39.94,ymax = 40.02),colour = "red",alpha = 0) +
  geom_rect(aes(xmin = 116.29, xmax = 116.44, ymin = 39.84,ymax = 39.92),colour = "red",alpha = 0) +
  geom_text(data = label_zoom,aes(label = label,x= x,y= y), nudge_x = c(0.03,-0.03,-0.03),color = "red")+
  # coord_sf(xlim = c(116.0853,116.7117),ylim = c(39.68924,40.17132)) +
  # facet_zoom(
  #    xlim = c(116.0853,116.7117),ylim = c(39.68924,40.17132),
  #    zoom.size = 1,shrink = T) + 
  scale_fill_identity()+
  # scale_fill_manual(values = c("Residential" = "#457b9d","Park" = "#84a729","Transport" = "#C75c64","Work" = "#f0b57d")) +
  ## visits: 1st Qu:1886, median:4136.65, 3st Qu:7163.85
  # scale_alpha(breaks = c(1886.28, 4136.65, 7163.85))+
  # scale_colour_manual(values = c("Residential" = "#457b9d","Park" = "#84a729","Transport" = "#C75c64","Work" = "#f0b57d")) +
  # scale_linetype(palette = "blank")+
  labs(
    x = NULL,
    y = NULL
  ) +
  # scale_size(name = "Numbers\nof visits\nper day",
  #            guide = guide_legend(theme = theme(legend.title = element_text(size = 10)),
  #                                 order = order(1)),
  #            breaks=c(10e2,10e3,10e4,10e5),
  #            range = c(.1,10),
  #            labels = expression(10^3, 10^4, 10^5, 0)) +
  guides(
    fill = guide_legend(nrow = 2)
    # shape = guide_legend(nrow = 2)
  )+
  theme_bw() +
  theme(
    plot.tag = element_text(size = 20),
    plot.tag.position = c(1,0.3))+
  annotation_scale(location = "br",style = "ticks") +
  theme(legend.position = "bottom")
beijing_aoi_a <- ggplot(data = beijing)+
  geom_sf(fill = "white") +
  geom_sf(data = aoiDistPlot[[1]], aes(fill = fill, geometry = geometry), linetype = "blank") +
  geom_sf(data = aoiDistPlot[[2]], aes(fill = fill, geometry = geometry), linetype = "blank") +
  geom_sf(data = aoiDistPlot[[3]], aes(fill = fill, geometry = geometry), linetype = "blank") +
  geom_sf(data = aoiDistPlot[[4]], aes(fill = fill, geometry = geometry), linetype = "blank") +
  geom_sf(data = spPOI_point[c(12),],color = "black")+
  geom_text_repel(data = spPOI[c(12),],aes(x=lon,y=lat,label = name),)+
  scale_fill_identity()+
  scale_x_continuous(breaks = seq(116.40,116.55,.05))+
  labs(
    x = NULL,
    y = NULL,
  ) +
  guides(
    fill = guide_legend(nrow = 2)
  )+
  theme_bw() +
  annotation_scale(location = "br",style = "ticks") +
  theme(legend.position = "bottom") +
  coord_sf(xlim = c(116.40,116.55),ylim = c(39.88,39.96))
beijing_aoi_b <- ggplot(data = beijing)+
  geom_sf(fill = "white") +
  geom_sf(data = aoiDistPlot[[1]], aes(fill = fill, geometry = geometry), linetype = "blank") +
  geom_sf(data = aoiDistPlot[[2]], aes(fill = fill, geometry = geometry), linetype = "blank") +
  geom_sf(data = aoiDistPlot[[3]], aes(fill = fill, geometry = geometry), linetype = "blank") +
  geom_sf(data = aoiDistPlot[[4]], aes(fill = fill, geometry = geometry), linetype = "blank") +
  geom_sf(data = spPOI_point[c(9),],color = "black")+
  geom_text_repel(data = spPOI[c(9),],aes(x=lon,y=lat,label = name),)+
  scale_fill_identity()+
  scale_x_continuous(breaks = seq(116.25,116.40,.05))+
  labs(
    x = NULL,
    y = NULL,
  ) +
  guides(
    fill = guide_legend(nrow = 2)
  )+
  theme_bw() +
  annotation_scale(location = "br",style = "ticks") +
  theme(legend.position = "bottom") +
  coord_sf(xlim = c(116.25,116.40),ylim = c(39.94,40.02))
beijing_aoi_c <- ggplot(data = beijing)+
  geom_sf(fill = "white") +
  geom_sf(data = aoiDistPlot[[1]], aes(fill = fill, geometry = geometry), linetype = "blank") +
  geom_sf(data = aoiDistPlot[[2]], aes(fill = fill, geometry = geometry), linetype = "blank") +
  geom_sf(data = aoiDistPlot[[3]], aes(fill = fill, geometry = geometry), linetype = "blank") +
  geom_sf(data = aoiDistPlot[[4]], aes(fill = fill, geometry = geometry), linetype = "blank") +
  geom_sf(data = spPOI_point[c(2,4,5),],color = "black")+
  geom_text_repel(data = spPOI[c(2,4,5),],aes(x=lon,y=lat,label = name),)+
  scale_fill_identity()+
  scale_x_continuous(breaks = seq(116.29,116.44,.05))+
  labs(
    x = NULL,
    y = NULL,
  ) +
  guides(
    fill = guide_legend(nrow = 2)
  )+
  theme_bw() +
  annotation_scale(location = "br",style = "ticks") +
  theme(legend.position = "bottom") +
  #xmin = 116.29, xmax = 116.44, ymin = 39.84,ymax = 39.92
  coord_sf(xlim = c(116.29,116.44),ylim = c(39.84,39.92))

####Draw legend
# separate the groups
bivariate_color_scale %<>%
  separate(group, into = c("visits", "class"), sep = " - ") %>%
  mutate(visits = as.integer(visits))
bivariate_color_scale$class <- bivariate_color_scale$class %>%
  factor() %>%
  revalue(c("1" = "Residential", "2" = "Park", "3" = "Transport", "4" = "Work")) %>%
  factor(labels = c("Residential", "Park", "Transport", "Work"))
bivariate_color_scale$visits <- bivariate_color_scale$visits %>%
  factor() %>%
  revalue(c("1" = "Fewer people", "2" = "", "3" = "More people")) %>%
  factor(labels = c("Fewer people", "", "More people"))
legend <- ggplot() +
  geom_tile(
    data = bivariate_color_scale,
    mapping = aes(
      x = visits,
      y = class,
      fill = fill)
  ) +
  scale_fill_identity() +
  labs(
    x = NULL,
    y = NULL
  ) +
  theme_minimal() +
  # make font small enough
  theme(
    axis.title = element_text(size = 6)
  ) +
  # quadratic tiles
  coord_fixed()
# Pbeijing_aoi <- ggdraw() +
#   draw_plot(beijing_aoi, 0, 0, 1, 1) +
#   draw_plot(legend, x= 0, y = 0.7, width=.8, height = 0.3)
p1 <- ggarrange(beijing_aoi, beijing_mp, ncol = 2, hjust = c(-1, -1), labels = c("a", "b"), font.label = list(size = 20, color = "black", face = "bold", family = NULL))
p2 <- ggarrange(beijing_aoi_a, beijing_aoi_b, beijing_aoi_c, nrow = 1, labels = c("c","d","e"),font.label = list(size = 20, color = "black", face = "bold", family = NULL))


```
## save
```{r}

###需要在console中输入
#保存为eps
setEPS()
postscript(file = "~/ClimBehav_bj/results/plots/figure1.eps",width = 10.5,height = 6)
pushViewport(viewport(layout = grid.layout(3,6)))
print(p1, vp = viewport(layout.pos.row = 1:2,layout.pos.col = 1:6))
print(p2, vp = viewport(layout.pos.row = 3,layout.pos.col = 1:6))
# print(p1, vp = viewport(layout.pos.row = 1:2,layout.pos.col = 1:3))
# print(p1, vp = viewport(layout.pos.row = 1:2,layout.pos.col = 1:3))
# print(p1, vp = viewport(layout.pos.row = 1:2,layout.pos.col = 1:3))
dev.off()
#save as pdf
pdf(file = "~/ClimBehav_bj/results/plots/figure1.pdf",width = 10.5,height = 6)
pushViewport(viewport(layout = grid.layout(3,6)))
print(p1, vp = viewport(layout.pos.row = 1:2,layout.pos.col = 1:6))
print(p2, vp = viewport(layout.pos.row = 3,layout.pos.col = 1:6))
# print(p1, vp = viewport(layout.pos.row = 1:2,layout.pos.col = 1:3))
# print(p1, vp = viewport(layout.pos.row = 1:2,layout.pos.col = 1:3))
# print(p1, vp = viewport(layout.pos.row = 1:2,layout.pos.col = 1:3))
dev.off()
###
#ggsave出图比例不对
# p <- ggarrange(p1,p2,nrow = 2)
# ggsave("~/ClimBehav_bj/results/plots/figure1.eps",plot = p, device = "eps", width =210, height =180, units = "mm")
# ggsave("~/ClimBehav_bj/results/plots/figure1.pdf",plot = p, device = "pdf", width =210, height =180, units = "mm")
```

